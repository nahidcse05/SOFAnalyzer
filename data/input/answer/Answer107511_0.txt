<p>There is always some space used by file management data structures. To keep track of what part of the hard disk is used by which file, the file system needs to use some of the disk space. If you are an expert user and know what you are doing then you can tweak some parameters when creating the file system to reduce the size of these management structures but that may increase the wasted space per every file. Below is the text that best describes this idea. Its not my text, just some thing that I found on internet. If you want to read the original post or need more detail plz visit this <a href="http://gparted-forum.surf4.info/viewtopic.php?id=13021" rel="nofollow">link</a></p>

<blockquote>
  <p>As far as I know, ext2/3 (and maybe ext4 as well) use fixed-size management data structures that are written once during creating the file system - and never extended afterwards (unless you don't resize the file system). As a result, the management structures do always consume the same amount of space on your partition, no matter how much data you have stored there.
  In contrast to this, some other file systems - ReiserFS is one of this kind, I think - allocate space for their management structures dynamically - that is, management structures start off consuming very little space ruight after creating the file system, but grow as you put more data on the drive. In the end, this approach can lead to the same amount of storage space used for management as in a file system that has fixed-size management structures - so don't let yourself be fooled by the amount of "used" space on your freshly-formatted ext3 partition!
  However, there are some options that can be passed to the mkfs.ext2 command which influence the size of the management structures. Most important of these options are the -i option (this one defines the ratio of inodes per storage space - that is, you can influence how many bytes of storage space one inode should "take care of") as well as the -I option (which defines the amount of storage space occupied by one inode). Please note that these values can not be changed once the file system is created - you have to re-format the partition if you want to change one of them. And since the first of these options indirectly defines the total number of inodes on your partition, and since each inode can represent only one single file or directory, it also limits the number of files that can be stored on your partition! As a result, you can tune the number of inodes to your current needs (like, e.g., one inode per 128 MBytes - this could minimize the overhead occupied by the inodes on a file system that is reserved for storing movies, CD-ROM ISO images or other large files of several 100 MBytes each - but if you want to put your photo collection there, you won't be able to get the partition only halfway filled since you'd run out of inodes far before this point).</p>
</blockquote>
